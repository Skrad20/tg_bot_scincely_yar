import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
from typing import Callable
from settings import PATH_STATIC
from app.parsing import ParserProgram


class Answer:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å.
    """
    def __init__(self) -> None:
        self.answer_dict: dict[str, Callable] = {}

    def get_function_answer(self, text: str) -> Callable:
        return self.answer_dict.get(text, self.default_answer)

    def default_answer(self, update: Update, context: CallbackContext):
        chat = update.effective_chat
        name_user = update.message.chat.first_name
        text = (
            f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª, {name_user}." +
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å."
        )

        buttons = ReplyKeyboardMarkup(
            [
                ['–ë–ª–∏–∂–∞–π—à–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–û –ø—Ä–æ–µ–∫—Ç–µ'],
                ['–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º', "–ì–¥–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã"],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
            ],
            resize_keyboard=True
        )

        context.bot.send_message(
            chat_id=chat.id,
            text=text,
            reply_markup=buttons
        )


class AnswerText(Answer):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.
    """
    def __init__(self) -> None:
        super().__init__()
        self.answer_dict = {
            '–ë–ª–∏–∂–∞–π—à–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã': self.upcoming_programs,
            '–û –ø—Ä–æ–µ–∫—Ç–µ': self.about,
            '–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º': self.location_of_the_programs,
            "–ì–¥–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã": self.where_to_buy_tickets,
            '–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã': self.frequent_questions,
        }
        self.url_site = "https://smartyar.timepad.ru/events/"

    def upcoming_programs(self, update: Update, context: CallbackContext):
        chat = update.effective_chat
        buttons = ReplyKeyboardMarkup(
            [
                ['–ë–ª–∏–∂–∞–π—à–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–û –ø—Ä–æ–µ–∫—Ç–µ'],
                ['–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º', "–ì–¥–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã"],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
            ],
            resize_keyboard=True
        )

        pp = ParserProgram()
        data = pp.get_data()
        for prog in data:
            text = (
                "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: " + prog.name + "\n" +
                "–ö–æ–≥–¥–∞: " + prog.period + "\n" +
                "–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ: " + prog.time_data + "\n" +
                "–û —á—ë–º: " + prog.description + "\n" +
                f'<a href="{prog.link}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>'
            )
            context.bot.send_message(
                chat_id=chat.id,
                text=text,
                reply_markup=buttons,
                parse_mode="HTML"
            )

    def about(self, update: Update, context: CallbackContext):
        text = (
            "–ü—Ä–æ–µ–∫—Ç ¬´–£–º–Ω—ã–π –Ø—Ä–æ—Å–ª–∞–≤–ª—å¬ª ‚Äî –Ω–∞—É—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã" +
            " –¥–ª—è –¥–µ—Ç–µ–π 7-14 –ª–µ—Ç.\n" + " üî¨–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞—É—á–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã" +
            " –¥–ª—è –¥–µ—Ç–µ–π 5-14 –ª–µ—Ç. üßëüèª‚Äçüî¨–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–ª–æ–¥—ã—Ö —É—á—ë–Ω—ã—Ö —É–∂–µ" +
            " –±–æ–ª—å—à–µ 3 –ª–µ—Ç " +
            " –≤–ª—é–±–ª—è–µ—Ç –¥–µ—Ç–µ–π –≤ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏. \n" +
            f'<a href="{self.url_site}">–ù–∞—à —Å–∞–π—Ç</a>\n' +
            "–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: +7 (980) 747-21-72\n" +
            "–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ WhatsApp."
        )

        chat = update.effective_chat
        buttons = ReplyKeyboardMarkup(
            [
                ['–ë–ª–∏–∂–∞–π—à–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–û –ø—Ä–æ–µ–∫—Ç–µ'],
                ['–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º', "–ì–¥–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã"],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
            ],
            resize_keyboard=True
        )

        context.bot.send_message(
            chat_id=chat.id,
            text=text,
            reply_markup=buttons,
            parse_mode="HTML"
        )

    def location_of_the_programs(
        self, update: Update,
        context: CallbackContext
    ):
        text = "–£–≥–ª–∏—á—Å–∫–∞—è —É–ª–∏—Ü–∞, 24, –Ø—Ä–æ—Å–ª–∞–≤–ª—å, 150054"
        chat = update.effective_chat
        buttons = ReplyKeyboardMarkup(
            [
                ['–ë–ª–∏–∂–∞–π—à–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–û –ø—Ä–æ–µ–∫—Ç–µ'],
                ['–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º', "–ì–¥–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã"],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
            ],
            resize_keyboard=True
        )
        context.bot.send_photo(
            chat_id=chat.id,
            photo=open(
                os.path.join(PATH_STATIC, "map.png"),
                'rb'
            )
        )
        context.bot.send_message(
            chat_id=chat.id,
            text=text,
            reply_markup=buttons,
            parse_mode="HTML"
        )

    def where_to_buy_tickets(self, update: Update, context: CallbackContext):
        text = (
            "–ë–∏–ª–µ—Ç—ã –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ" +
            f' <a href="{self.url_site}">—Å—Å—ã–ª–∫–µ</a>.' +
            " –ò–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +7 (980) 747-21-72"
        )

        chat = update.effective_chat
        buttons = ReplyKeyboardMarkup(
            [
                ['–ë–ª–∏–∂–∞–π—à–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–û –ø—Ä–æ–µ–∫—Ç–µ'],
                ['–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º', "–ì–¥–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã"],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
            ],
            resize_keyboard=True
        )

        context.bot.send_message(
            chat_id=chat.id,
            text=text,
            reply_markup=buttons,
            parse_mode="HTML"
        )

    def frequent_questions(self, update: Update, context: CallbackContext):
        pass


class AnswerCommand(Answer):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å-–∫–æ–º–∞–Ω–¥—É.
    """
    pass
